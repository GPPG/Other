//
//  AdjustViewController.swift
//  cmmm
//
//  Created by 郭鹏 on 2019/6/5.
//  Copyright © 2019 郭鹏. All rights reserved.
//

import UIKit

class AdjustViewController: UIViewController {

    // MARK: - lazy
    lazy var adjustBottomView: AdjustBottomContainerView = {
        let adjustBottomView = AdjustBottomContainerView()
        return adjustBottomView
    }()
    
    lazy var adjustTopContainerView: AdjustTopContainerView = {
        let adjustTopContainerView = AdjustTopContainerView()
        return adjustTopContainerView
    }()
    
    // MARK: - life Cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setupUI()
        addView()
        setupLayout()
        callBack()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.isNavigationBarHidden = true
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.navigationController?.isNavigationBarHidden = false
    }
    
    // MARK: - set up
    func setupUI(){
        self.view.backgroundColor = UIColor.white
        
        
    }
    
    func addView(){
        self.view.addSubview(adjustBottomView)
        self.view.addSubview(adjustTopContainerView)
    }
    
    // MARK: - layout
    func setupLayout(){

        adjustBottomView.snp.makeConstraints { (make) in
            make.left.right.bottom.equalToSuperview()
            make.height.equalTo(180)
        }
        
        adjustTopContainerView.snp.makeConstraints { (make) in
            make.left.right.equalToSuperview()
            make.top.equalToSuperview().offset(64)
            make.bottom.equalTo(adjustBottomView.snp.top)
        }
        
    }
    
    // MARK: - callBack
    func callBack(){
        
        weak var weakSelf = self
        adjustTopContainerView.topReturnActionBlock = {
            weakSelf?.navigationController?.popViewController(animated: true)
        }
        
        adjustTopContainerView.topSaveActionBlock = {
            
            
        }
        
        adjustTopContainerView.topLastStepActionBlock = {
            
            
        }

        adjustTopContainerView.topNextStepActionBlock = {
            
            
        }
        
        adjustTopContainerView.topDownActionBlock = {
            
            
        }

        adjustTopContainerView.topUpActionBlock = {
            
            
        }
        
        adjustBottomView.bottomLeftActionBlock = {
            
            
        }
        
        adjustBottomView.bottomRightActionBlock = {
            
            
        }
        
        adjustBottomView.bottomSelectTypeActionBlock = {(indexValue) in
            
            
        }
        
        adjustBottomView.bottomSilderActionBlock = { (changValue) in
            
            
        }
        
    }
    
}
